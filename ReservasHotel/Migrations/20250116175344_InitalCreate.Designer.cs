// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReservasHotel;

#nullable disable

namespace ReservasHotel.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250116175344_InitalCreate")]
    partial class InitalCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ReservasHotel.AppDBContext+Cliente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("ReservasHotel.AppDBContext+Habitacion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("Disponible")
                        .HasColumnType("bit");

                    b.Property<decimal>("PrecioPorNoche")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("numHabitacion")
                        .HasColumnType("int");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Habitaciones");
                });

            modelBuilder.Entity("ReservasHotel.AppDBContext+Reserva", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("clienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("habitacionId")
                        .HasColumnType("int");

                    b.Property<decimal>("precioTotal")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("id");

                    b.HasIndex("clienteId");

                    b.HasIndex("habitacionId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("ReservasHotel.AppDBContext+ServicioAdicional", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("Reservaid")
                        .HasColumnType("int");

                    b.Property<decimal>("costo")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idReserva")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Reservaid");

                    b.ToTable("ServiciosAdicionales");
                });

            modelBuilder.Entity("ReservasHotel.AppDBContext+Reserva", b =>
                {
                    b.HasOne("ReservasHotel.AppDBContext+Cliente", null)
                        .WithMany("reservas")
                        .HasForeignKey("clienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReservasHotel.AppDBContext+Habitacion", null)
                        .WithMany("reservas")
                        .HasForeignKey("habitacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ReservasHotel.AppDBContext+ServicioAdicional", b =>
                {
                    b.HasOne("ReservasHotel.AppDBContext+Reserva", null)
                        .WithMany("serviciosAdicionales")
                        .HasForeignKey("Reservaid");
                });

            modelBuilder.Entity("ReservasHotel.AppDBContext+Cliente", b =>
                {
                    b.Navigation("reservas");
                });

            modelBuilder.Entity("ReservasHotel.AppDBContext+Habitacion", b =>
                {
                    b.Navigation("reservas");
                });

            modelBuilder.Entity("ReservasHotel.AppDBContext+Reserva", b =>
                {
                    b.Navigation("serviciosAdicionales");
                });
#pragma warning restore 612, 618
        }
    }
}
